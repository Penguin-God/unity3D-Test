Agent : 내비게이션 메시 위에서 길을 찾아서 움직일 게임 오브젝트
캐릭터 : Nav Mesh Agent가 적용된 게임 오브젝트
Tip : 플레이하면서 조절한 컴포넌트 값을 복사한 다음에 플레이 정지하고 초기환 된 값에 붙여넣기 

I. nav인스펙터 창
1. 오브젝트 : 오브젝트를 보여주는 Scene Filter가 있음 
All : Scene에 있는 모든 오브젝트를 보여주는 필터
Mesh Renderers : Mesh Renderers가 있는 오브젝트를 보여주는 필터
Terrains : 높낮이를 조절하며 지형을 만들 수 있는 Terrains를 보여주는 필터
Mesh Renderers나 Terrains 컴포넌트를 가지고 있어야 내비게이션 영역으로 설정 가능
씬에서 위의 조건을 만족하는 오브젝트를 클릭하면 Navigation Static을 체크하여 내비게이션 영역이 가능하게 만들 수 있음

II. 내비게이션 창
1. Object : 아래에 Bake버튼을 클릭하면 오브젝트 위에 캐릭터가 움직일 수 있는 영역인 NavMesh가 파란색으로 보인다.
Mesh : 3D에서 삼각형이나 다각형 여러 개로 면을 구성해서 캐릭터가 이동할 수 있는 표면을 구성함

2. Bake(굽기)
Agent Radius(에이전트 반지름) : NavMesh위에서 움직일 대상의 반지름 크면 클수록 Agent가 뚱뚱해져 벽에 바짝 붙어 다니지 못함 즉 활동 범위가 줄어듬
Agent Hegith : Agent의 높이 크면 경사 사이의 좁은 곳을 못 지나감
Max Slope : 이동할수 있는 경사의 최대 각도
Step Hegith : 계단으로 여기고 올라갈 수 있는 높이

3. Area(영역) : 영역마다 다른 이름을 붙여 이동비용을 다르게 줄 수 있음 이동거리는 같아도 비용이 다르면 NavMesh는 가급적 비용이 낮은 이동경로를 선택함 이를 이용해 몬스터가 자주 다니지 않는 길을 만들 수도 있음

4. Agent : Agent타입을 서로 다르게 만들어서 같은 길을 다르게 가게 할 수 있음 ex) 덩치가 작은 Agent는 아래로 가는데 큰 Agent는 돌아서 가는 기능 구현

III. Nav Mesh Agent Component
1. Steering(스티어링)
1-1. Base Offset : 길을 찾을 때 사용되는 충돌 실린더의 위치로 값을 올리면 캐릭터가 공중에 뜨고 낮추면 바닥 아래로 묻힘, 캐릭터와 Agent의 높이를 맞추기 위해 사용됨
1-2. Speed : Agent가 움직이는 속도
1-3  Angular Speed(각속력) : Agnet가 회전하는 속도, 회전 값은 degree/secend로 만약 값이 120이라면 1초에 120도 회전함
1-4. Acceleration(가속도) :  대충 값이 높을수록 Agent가 최고 속도에 빨리 도달함
1-5. Stopping Distance(정지 거리) : 목표와 얼마만큼의 거리를 두고 멈출 것인가 원거리 유닛이 대상을 향해서 이동하다가 공격 가능한 거리에 도달하면 이동을 멈추고 공격하는 것과 같은 기능을 구현할 때 유용함  
1-6. Auto Breaking(자동 제동) : Agent가 목적지에 도착하기 직전에 감속을 시작할 것일지를 결정하는 
bool값 프로퍼티(컴포넌트 속성), 만약 이걸 꺼버리면 목적지에 도착한 후에 감속을 시작해서 정확히 목적지에서 멈추지 않고 목적지에서 조금 더 뒤에서 멈춤

2. Obstacle Avoidance(장애물 회피) : Nav Mesh Agent 컴포넌트를 가지고 있는 Agent끼리의 충돌 관련 속성을 가짐 즉 다른 Agnet와의 충돌을 감지하고 밀어내는 Agent전용 콜라이더 같은 느낌
2-1. Radius(반지름) :  Agent끼리의 충돌을 감지하는 반지름
2-2. Height : Agent끼리의 높이 충돌을 조절하는 프로퍼티
2-3. Quality(장애물 회피 품질) HighQuality(고품질)로 갈수록 장애물을 피하려는 움직임이 정밀해지고 LowQuality로 갈수록 움직임이 간소화되며 None(없음)으로 설정하면 서로 무시함
2-4. priority(우선 순위) : 0~99까지 있는데 0이 제일높고 99가 제일 낮음 우선순위가 낮은 Agent는 우선순위 높은 Agent를 밀어낼 수 없고 반대는 우선순위가 낮은 Agnet를 고려하지 않고 그냥 밀고 가버림 우선순위가 같으면 피하려는 하지만 밀지 않으면 갈 수 없는 상태라면 밀고 가버림

3. Path Finding(경로 찾기)
3-1. Auto Repath : 내비게이션 메시에 변동이 생겼을 때 즉, 추적 중에 길이 막히는 등에 변동이 일어나면 자동으로 길을 다시 찾을 것인가를 설정하는 bool 값 프로퍼티 이때 먼거리를 이동할 때 보이지도 않는 벽을 계산하기 때문에 정교한 움직임을 만들고 싶다면 원하는 곳까지 도달한 후 값을 true로 설정하는 기능을 구현해야 함
3-2. Area Mask : 내비게이션 창에서 설정한 영역 중에 지나갈 수 있는 영역과 지나갈 수 없는 영역을 설정할 수 있으며 이를 이용해 물을 싫어하는 몬스터는 강을 건너지 못하게 설정할 수 있음

IV. Nav Mesh Obstacle(Agent의 장애물 역할을 하게 해주는 컴포넌트)
1. Shape(모양) : 장애물의 형태를 결정하는 옵션으로 Box, Capsule 두가지를 지원하며 아래2개 옵션은 크기조절임

Nav Mesh OBstacle은 그냥 벽과 다를 게 없어 보이지만 Static으로 설정된 다른 지형과 다르게 움직일 수 있으며 실시간으로 Agent를 밀어내는 등의 연출도 가능(이때 밀려난 Agent는 원래 자리로 돌아오려고 움직임)

2. Carve(파내기) : Bake를 새로 굽지 않아도 실기간으로 Nav를 파내서 Agent가 지나갈 수 없는 영역으로 만듬
2-1. Move Threshold(이동 임계값) : Nav Mesh를 새로 파내지 않는 최소 거리
2-2. Time to Stationary(정지 시간) : 설정한 값만큼 정지해 있으면 정지한 걸로 판단 
2-3. Carve Only Stationary : 정지한 오브젝트만 Nav Mesh를 파낼지 정하는 bool값 끄면 자연스러운 움직임을 보여줄 수 있지만 성능이 씹창임 